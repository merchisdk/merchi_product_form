'use client';

import InputHiddenStatic from './InputHiddenStatic';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var VariationFieldStaticValues = function VariationFieldStaticValues(_ref) {
  var name = _ref.name,
    index = _ref.index,
    variation = _ref.variation;
  var variationField = variation.variationField;
  var fieldType = variationField.fieldType,
    id = variationField.id,
    multipleSelect = variationField.multipleSelect,
    fieldName = variationField.name,
    placeholder = variationField.placeholder,
    position = variationField.position,
    required = variationField.required,
    sellerProductEditable = variationField.sellerProductEditable;
  var variationName = function variationName(attr) {
    return "".concat(name, "[").concat(index, "]").concat(attr);
  };
  function intValue(v) {
    return parseInt(v, 10).toString();
  }
  function boolValue(v) {
    return v ? 'true' : 'false';
  }
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(InputHiddenStatic, {
      name: variationName('.variationField.id'),
      value: intValue(id)
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: variationName('.variationField.name'),
      value: fieldName
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: variationName('.variationField.placeholder'),
      value: placeholder
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: variationName('.variationField.fieldType'),
      value: intValue(fieldType)
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: variationName('.variationField.position'),
      value: intValue(position)
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: variationName('.variationField.sellerProductEditable'),
      value: boolValue(sellerProductEditable)
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: variationName('.variationField.multipleSelect'),
      value: boolValue(multipleSelect)
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: variationName('.variationField.required'),
      value: boolValue(required)
    })]
  });
};
export default VariationFieldStaticValues;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbnB1dEhpZGRlblN0YXRpYyIsImpzeCIsIl9qc3giLCJGcmFnbWVudCIsIl9GcmFnbWVudCIsImpzeHMiLCJfanN4cyIsIlZhcmlhdGlvbkZpZWxkU3RhdGljVmFsdWVzIiwiX3JlZiIsIm5hbWUiLCJpbmRleCIsInZhcmlhdGlvbiIsInZhcmlhdGlvbkZpZWxkIiwiZmllbGRUeXBlIiwiaWQiLCJtdWx0aXBsZVNlbGVjdCIsImZpZWxkTmFtZSIsInBsYWNlaG9sZGVyIiwicG9zaXRpb24iLCJyZXF1aXJlZCIsInNlbGxlclByb2R1Y3RFZGl0YWJsZSIsInZhcmlhdGlvbk5hbWUiLCJhdHRyIiwiY29uY2F0IiwiaW50VmFsdWUiLCJ2IiwicGFyc2VJbnQiLCJ0b1N0cmluZyIsImJvb2xWYWx1ZSIsImNoaWxkcmVuIiwidmFsdWUiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tcG9uZW50cy9WYXJpYXRpb25GaWVsZFN0YXRpY1ZhbHVlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0IElucHV0SGlkZGVuU3RhdGljIGZyb20gJy4vSW5wdXRIaWRkZW5TdGF0aWMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBuYW1lOiBzdHJpbmc7XG4gIGluZGV4OiBudW1iZXI7XG4gIHZhcmlhdGlvbjogYW55O1xufVxuXG5jb25zdCBWYXJpYXRpb25GaWVsZFN0YXRpY1ZhbHVlczogUmVhY3QuRkM8UHJvcHM+ID0gKHtcbiAgbmFtZSxcbiAgaW5kZXgsXG4gIHZhcmlhdGlvbixcbn0pID0+IHtcbiAgY29uc3Qge1xuICAgIHZhcmlhdGlvbkZpZWxkLFxuICB9ID0gdmFyaWF0aW9uO1xuICBjb25zdCB7XG4gICAgZmllbGRUeXBlLCBpZCwgbXVsdGlwbGVTZWxlY3QsIG5hbWU6IGZpZWxkTmFtZSwgcGxhY2Vob2xkZXIsIHBvc2l0aW9uLCByZXF1aXJlZCwgc2VsbGVyUHJvZHVjdEVkaXRhYmxlXG4gIH0gPSB2YXJpYXRpb25GaWVsZDtcbiAgY29uc3QgdmFyaWF0aW9uTmFtZSA9IChhdHRyOiBzdHJpbmcpID0+IGAke25hbWV9WyR7aW5kZXh9XSR7YXR0cn1gO1xuXG4gIGZ1bmN0aW9uIGludFZhbHVlKHY6IGFueSkge1xuICAgIHJldHVybiBwYXJzZUludCh2LCAxMCkudG9TdHJpbmcoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJvb2xWYWx1ZSh2OiBhbnkpIHtcbiAgICByZXR1cm4gdiA/ICd0cnVlJyA6ICdmYWxzZSc7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SW5wdXRIaWRkZW5TdGF0aWNcbiAgICAgICAgbmFtZT17dmFyaWF0aW9uTmFtZSgnLnZhcmlhdGlvbkZpZWxkLmlkJyl9XG4gICAgICAgIHZhbHVlPXtpbnRWYWx1ZShpZCl9XG4gICAgICAvPlxuICAgICAgPElucHV0SGlkZGVuU3RhdGljXG4gICAgICAgIG5hbWU9e3ZhcmlhdGlvbk5hbWUoJy52YXJpYXRpb25GaWVsZC5uYW1lJyl9XG4gICAgICAgIHZhbHVlPXtmaWVsZE5hbWV9XG4gICAgICAvPlxuICAgICAgPElucHV0SGlkZGVuU3RhdGljXG4gICAgICAgIG5hbWU9e3ZhcmlhdGlvbk5hbWUoJy52YXJpYXRpb25GaWVsZC5wbGFjZWhvbGRlcicpfVxuICAgICAgICB2YWx1ZT17cGxhY2Vob2xkZXJ9XG4gICAgICAvPlxuICAgICAgPElucHV0SGlkZGVuU3RhdGljXG4gICAgICAgIG5hbWU9e3ZhcmlhdGlvbk5hbWUoJy52YXJpYXRpb25GaWVsZC5maWVsZFR5cGUnKX1cbiAgICAgICAgdmFsdWU9e2ludFZhbHVlKGZpZWxkVHlwZSl9XG4gICAgICAvPlxuICAgICAgPElucHV0SGlkZGVuU3RhdGljXG4gICAgICAgIG5hbWU9e3ZhcmlhdGlvbk5hbWUoJy52YXJpYXRpb25GaWVsZC5wb3NpdGlvbicpfVxuICAgICAgICB2YWx1ZT17aW50VmFsdWUocG9zaXRpb24pfVxuICAgICAgLz5cbiAgICAgIDxJbnB1dEhpZGRlblN0YXRpY1xuICAgICAgICBuYW1lPXt2YXJpYXRpb25OYW1lKCcudmFyaWF0aW9uRmllbGQuc2VsbGVyUHJvZHVjdEVkaXRhYmxlJyl9XG4gICAgICAgIHZhbHVlPXtib29sVmFsdWUoc2VsbGVyUHJvZHVjdEVkaXRhYmxlKX1cbiAgICAgIC8+XG4gICAgICA8SW5wdXRIaWRkZW5TdGF0aWNcbiAgICAgICAgbmFtZT17dmFyaWF0aW9uTmFtZSgnLnZhcmlhdGlvbkZpZWxkLm11bHRpcGxlU2VsZWN0Jyl9XG4gICAgICAgIHZhbHVlPXtib29sVmFsdWUobXVsdGlwbGVTZWxlY3QpfVxuICAgICAgLz5cbiAgICAgIDxJbnB1dEhpZGRlblN0YXRpY1xuICAgICAgICBuYW1lPXt2YXJpYXRpb25OYW1lKCcudmFyaWF0aW9uRmllbGQucmVxdWlyZWQnKX1cbiAgICAgICAgdmFsdWU9e2Jvb2xWYWx1ZShyZXF1aXJlZCl9XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBWYXJpYXRpb25GaWVsZFN0YXRpY1ZhbHVlcztcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWixPQUFPQSxpQkFBaUIsTUFBTSxxQkFBcUI7QUFBQyxTQUFBQyxHQUFBLElBQUFDLElBQUE7QUFBQSxTQUFBQyxRQUFBLElBQUFDLFNBQUE7QUFBQSxTQUFBQyxJQUFBLElBQUFDLEtBQUE7QUFRcEQsSUFBTUMsMEJBQTJDLEdBQUcsU0FBOUNBLDBCQUEyQ0EsQ0FBQUMsSUFBQSxFQUkzQztFQUFBLElBSEpDLElBQUksR0FBQUQsSUFBQSxDQUFKQyxJQUFJO0lBQ0pDLEtBQUssR0FBQUYsSUFBQSxDQUFMRSxLQUFLO0lBQ0xDLFNBQVMsR0FBQUgsSUFBQSxDQUFURyxTQUFTO0VBRVQsSUFDRUMsY0FBYyxHQUNaRCxTQUFTLENBRFhDLGNBQWM7RUFFaEIsSUFDRUMsU0FBUyxHQUNQRCxjQUFjLENBRGhCQyxTQUFTO0lBQUVDLEVBQUUsR0FDWEYsY0FBYyxDQURMRSxFQUFFO0lBQUVDLGNBQWMsR0FDM0JILGNBQWMsQ0FEREcsY0FBYztJQUFRQyxTQUFTLEdBQzVDSixjQUFjLENBRGVILElBQUk7SUFBYVEsV0FBVyxHQUN6REwsY0FBYyxDQURnQ0ssV0FBVztJQUFFQyxRQUFRLEdBQ25FTixjQUFjLENBRDZDTSxRQUFRO0lBQUVDLFFBQVEsR0FDN0VQLGNBQWMsQ0FEdURPLFFBQVE7SUFBRUMscUJBQXFCLEdBQ3BHUixjQUFjLENBRGlFUSxxQkFBcUI7RUFFeEcsSUFBTUMsYUFBYSxHQUFHLFNBQWhCQSxhQUFhQSxDQUFJQyxJQUFZO0lBQUEsVUFBQUMsTUFBQSxDQUFRZCxJQUFJLE9BQUFjLE1BQUEsQ0FBSWIsS0FBSyxPQUFBYSxNQUFBLENBQUlELElBQUk7RUFBQSxDQUFFO0VBRWxFLFNBQVNFLFFBQVFBLENBQUNDLENBQU0sRUFBRTtJQUN4QixPQUFPQyxRQUFRLENBQUNELENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQ0UsUUFBUSxDQUFDLENBQUM7RUFDbkM7RUFFQSxTQUFTQyxTQUFTQSxDQUFDSCxDQUFNLEVBQUU7SUFDekIsT0FBT0EsQ0FBQyxHQUFHLE1BQU0sR0FBRyxPQUFPO0VBQzdCO0VBRUEsb0JBQ0VuQixLQUFBLENBQUFGLFNBQUE7SUFBQXlCLFFBQUEsZ0JBQ0UzQixJQUFBLENBQUNGLGlCQUFpQjtNQUNoQlMsSUFBSSxFQUFFWSxhQUFhLENBQUMsb0JBQW9CLENBQUU7TUFDMUNTLEtBQUssRUFBRU4sUUFBUSxDQUFDVixFQUFFO0lBQUUsQ0FDckIsQ0FBQyxlQUNGWixJQUFBLENBQUNGLGlCQUFpQjtNQUNoQlMsSUFBSSxFQUFFWSxhQUFhLENBQUMsc0JBQXNCLENBQUU7TUFDNUNTLEtBQUssRUFBRWQ7SUFBVSxDQUNsQixDQUFDLGVBQ0ZkLElBQUEsQ0FBQ0YsaUJBQWlCO01BQ2hCUyxJQUFJLEVBQUVZLGFBQWEsQ0FBQyw2QkFBNkIsQ0FBRTtNQUNuRFMsS0FBSyxFQUFFYjtJQUFZLENBQ3BCLENBQUMsZUFDRmYsSUFBQSxDQUFDRixpQkFBaUI7TUFDaEJTLElBQUksRUFBRVksYUFBYSxDQUFDLDJCQUEyQixDQUFFO01BQ2pEUyxLQUFLLEVBQUVOLFFBQVEsQ0FBQ1gsU0FBUztJQUFFLENBQzVCLENBQUMsZUFDRlgsSUFBQSxDQUFDRixpQkFBaUI7TUFDaEJTLElBQUksRUFBRVksYUFBYSxDQUFDLDBCQUEwQixDQUFFO01BQ2hEUyxLQUFLLEVBQUVOLFFBQVEsQ0FBQ04sUUFBUTtJQUFFLENBQzNCLENBQUMsZUFDRmhCLElBQUEsQ0FBQ0YsaUJBQWlCO01BQ2hCUyxJQUFJLEVBQUVZLGFBQWEsQ0FBQyx1Q0FBdUMsQ0FBRTtNQUM3RFMsS0FBSyxFQUFFRixTQUFTLENBQUNSLHFCQUFxQjtJQUFFLENBQ3pDLENBQUMsZUFDRmxCLElBQUEsQ0FBQ0YsaUJBQWlCO01BQ2hCUyxJQUFJLEVBQUVZLGFBQWEsQ0FBQyxnQ0FBZ0MsQ0FBRTtNQUN0RFMsS0FBSyxFQUFFRixTQUFTLENBQUNiLGNBQWM7SUFBRSxDQUNsQyxDQUFDLGVBQ0ZiLElBQUEsQ0FBQ0YsaUJBQWlCO01BQ2hCUyxJQUFJLEVBQUVZLGFBQWEsQ0FBQywwQkFBMEIsQ0FBRTtNQUNoRFMsS0FBSyxFQUFFRixTQUFTLENBQUNULFFBQVE7SUFBRSxDQUM1QixDQUFDO0VBQUEsQ0FDRixDQUFDO0FBRVAsQ0FBQztBQUVELGVBQWVaLDBCQUEwQiJ9