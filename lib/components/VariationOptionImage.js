'use client';

import TooltipElement from './TooltipElement';
import { optionImageUrl, variationFieldOptionCostDetail } from './utils';
import IconCheckedOrNoStock from './icons/IconCheckedOrNoStock';
import { useMerchiFormContext } from './MerchiProductFormProvider';
import InputHiddenStatic from './InputHiddenStatic';
import VariationFieldOptionDefaultInputs from './VariationFieldOptionDefaultInputs';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var defaultOptionImage = require('../images/product-not-found.png')["default"];
function VariationOptionImage(_ref) {
  var doClick = _ref.doClick,
    _ref$isAvailable = _ref.isAvailable,
    isAvailable = _ref$isAvailable === void 0 ? true : _ref$isAvailable,
    isChecked = _ref.isChecked,
    name = _ref.name,
    option = _ref.option,
    sellerProductEditable = _ref.sellerProductEditable;
  var _useMerchiFormContext = useMerchiFormContext(),
    classNameOptionImage = _useMerchiFormContext.classNameOptionImage,
    classNameOptionImageContainer = _useMerchiFormContext.classNameOptionImageContainer;
  var containerClass = "merchi-embed-form_image-select-option-item ".concat(isChecked ? 'image-checked' : '', " ").concat(isAvailable ? 'cursor-pointer' : 'option-no-inventory');
  var optionCost = variationFieldOptionCostDetail(option);
  var tooltip = String(option.value) + "".concat(!isAvailable ? ' - insufficient stock' : '');
  return /*#__PURE__*/_jsx("div", {
    className: classNameOptionImageContainer,
    onClick: isAvailable ? doClick : undefined,
    children: /*#__PURE__*/_jsxs("div", {
      className: containerClass,
      children: [/*#__PURE__*/_jsx(IconCheckedOrNoStock, {
        isChecked: isChecked,
        noStock: !isAvailable
      }), /*#__PURE__*/_jsx("span", {
        className: classNameOptionImage,
        style: {
          backgroundImage: "url(".concat(optionImageUrl(option), ")")
        }
      }), /*#__PURE__*/_jsx(TooltipElement, {
        tooltip: tooltip,
        children: /*#__PURE__*/_jsx("div", {
          className: "image-select-title",
          children: option.value
        })
      }), sellerProductEditable && /*#__PURE__*/_jsx("small", {
        className: "d-block",
        children: optionCost
      }), /*#__PURE__*/_jsx(InputHiddenStatic, {
        name: "".concat(name, ".linkedFile.viewUrl"),
        value: option.linkedFile && option.linkedFile.viewUrl ? option.linkedFile.viewUrl : defaultOptionImage.src
      }), /*#__PURE__*/_jsx(VariationFieldOptionDefaultInputs, {
        optionName: name,
        option: option
      })]
    })
  });
}
export default VariationOptionImage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUb29sdGlwRWxlbWVudCIsIm9wdGlvbkltYWdlVXJsIiwidmFyaWF0aW9uRmllbGRPcHRpb25Db3N0RGV0YWlsIiwiSWNvbkNoZWNrZWRPck5vU3RvY2siLCJ1c2VNZXJjaGlGb3JtQ29udGV4dCIsIklucHV0SGlkZGVuU3RhdGljIiwiVmFyaWF0aW9uRmllbGRPcHRpb25EZWZhdWx0SW5wdXRzIiwianN4IiwiX2pzeCIsImpzeHMiLCJfanN4cyIsImRlZmF1bHRPcHRpb25JbWFnZSIsInJlcXVpcmUiLCJWYXJpYXRpb25PcHRpb25JbWFnZSIsIl9yZWYiLCJkb0NsaWNrIiwiX3JlZiRpc0F2YWlsYWJsZSIsImlzQXZhaWxhYmxlIiwiaXNDaGVja2VkIiwibmFtZSIsIm9wdGlvbiIsInNlbGxlclByb2R1Y3RFZGl0YWJsZSIsIl91c2VNZXJjaGlGb3JtQ29udGV4dCIsImNsYXNzTmFtZU9wdGlvbkltYWdlIiwiY2xhc3NOYW1lT3B0aW9uSW1hZ2VDb250YWluZXIiLCJjb250YWluZXJDbGFzcyIsImNvbmNhdCIsIm9wdGlvbkNvc3QiLCJ0b29sdGlwIiwiU3RyaW5nIiwidmFsdWUiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwidW5kZWZpbmVkIiwiY2hpbGRyZW4iLCJub1N0b2NrIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJsaW5rZWRGaWxlIiwidmlld1VybCIsInNyYyIsIm9wdGlvbk5hbWUiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tcG9uZW50cy9WYXJpYXRpb25PcHRpb25JbWFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0IFRvb2x0aXBFbGVtZW50IGZyb20gJy4vVG9vbHRpcEVsZW1lbnQnO1xuaW1wb3J0IHsgb3B0aW9uSW1hZ2VVcmwsIHZhcmlhdGlvbkZpZWxkT3B0aW9uQ29zdERldGFpbCB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IEljb25DaGVja2VkT3JOb1N0b2NrIGZyb20gJy4vaWNvbnMvSWNvbkNoZWNrZWRPck5vU3RvY2snO1xuaW1wb3J0IHsgdXNlTWVyY2hpRm9ybUNvbnRleHQgfSBmcm9tICcuL01lcmNoaVByb2R1Y3RGb3JtUHJvdmlkZXInO1xuaW1wb3J0IElucHV0SGlkZGVuU3RhdGljIGZyb20gJy4vSW5wdXRIaWRkZW5TdGF0aWMnO1xuaW1wb3J0IFZhcmlhdGlvbkZpZWxkT3B0aW9uRGVmYXVsdElucHV0cyBmcm9tICcuL1ZhcmlhdGlvbkZpZWxkT3B0aW9uRGVmYXVsdElucHV0cyc7XG5cbmNvbnN0IGRlZmF1bHRPcHRpb25JbWFnZSA9IHJlcXVpcmUoJy4uL2ltYWdlcy9wcm9kdWN0LW5vdC1mb3VuZC5wbmcnKS5kZWZhdWx0O1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBkb0NsaWNrOiAoKSA9PiB2b2lkO1xuICBpc0F2YWlsYWJsZTogYm9vbGVhbjtcbiAgaXNDaGVja2VkOiBib29sZWFuO1xuICBuYW1lOiBzdHJpbmc7XG4gIG9wdGlvbjogYW55O1xuICBzZWxsZXJQcm9kdWN0RWRpdGFibGU/OiBib29sZWFuO1xufVxuXG5mdW5jdGlvbiBWYXJpYXRpb25PcHRpb25JbWFnZSh7XG4gIGRvQ2xpY2ssXG4gIGlzQXZhaWxhYmxlID0gdHJ1ZSxcbiAgaXNDaGVja2VkLFxuICBuYW1lLFxuICBvcHRpb24sXG4gIHNlbGxlclByb2R1Y3RFZGl0YWJsZSxcbn06IFByb3BzKSB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc05hbWVPcHRpb25JbWFnZSxcbiAgICBjbGFzc05hbWVPcHRpb25JbWFnZUNvbnRhaW5lcixcbiAgfSA9IHVzZU1lcmNoaUZvcm1Db250ZXh0KCk7XG4gIGNvbnN0IGNvbnRhaW5lckNsYXNzID0gYG1lcmNoaS1lbWJlZC1mb3JtX2ltYWdlLXNlbGVjdC1vcHRpb24taXRlbSAke1xuICAgIGlzQ2hlY2tlZCA/ICdpbWFnZS1jaGVja2VkJyA6ICcnXG4gIH0gJHtpc0F2YWlsYWJsZSA/ICdjdXJzb3ItcG9pbnRlcicgOiAnb3B0aW9uLW5vLWludmVudG9yeSd9YDtcbiAgY29uc3Qgb3B0aW9uQ29zdCA9IHZhcmlhdGlvbkZpZWxkT3B0aW9uQ29zdERldGFpbChvcHRpb24pO1xuICBjb25zdCB0b29sdGlwID1cbiAgICBTdHJpbmcob3B0aW9uLnZhbHVlKSArIGAkeyFpc0F2YWlsYWJsZSA/ICcgLSBpbnN1ZmZpY2llbnQgc3RvY2snIDogJyd9YDtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZU9wdGlvbkltYWdlQ29udGFpbmVyfVxuICAgICAgb25DbGljaz17aXNBdmFpbGFibGUgPyBkb0NsaWNrIDogdW5kZWZpbmVkfVxuICAgID5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjb250YWluZXJDbGFzc30+XG4gICAgICAgIDxJY29uQ2hlY2tlZE9yTm9TdG9jayBpc0NoZWNrZWQ9e2lzQ2hlY2tlZH0gbm9TdG9jaz17IWlzQXZhaWxhYmxlfSAvPlxuICAgICAgICA8c3BhblxuICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lT3B0aW9uSW1hZ2V9XG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybCgke29wdGlvbkltYWdlVXJsKG9wdGlvbil9KWAsXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgICAgPFRvb2x0aXBFbGVtZW50IHRvb2x0aXA9e3Rvb2x0aXB9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdpbWFnZS1zZWxlY3QtdGl0bGUnPntvcHRpb24udmFsdWV9PC9kaXY+XG4gICAgICAgIDwvVG9vbHRpcEVsZW1lbnQ+XG4gICAgICAgIHtzZWxsZXJQcm9kdWN0RWRpdGFibGUgJiYgKFxuICAgICAgICAgIDxzbWFsbCBjbGFzc05hbWU9J2QtYmxvY2snPntvcHRpb25Db3N0fTwvc21hbGw+XG4gICAgICAgICl9XG4gICAgICAgIDxJbnB1dEhpZGRlblN0YXRpY1xuICAgICAgICAgIG5hbWU9e2Ake25hbWV9LmxpbmtlZEZpbGUudmlld1VybGB9XG4gICAgICAgICAgdmFsdWU9e1xuICAgICAgICAgICAgb3B0aW9uLmxpbmtlZEZpbGUgJiYgb3B0aW9uLmxpbmtlZEZpbGUudmlld1VybFxuICAgICAgICAgICAgICA/IG9wdGlvbi5saW5rZWRGaWxlLnZpZXdVcmxcbiAgICAgICAgICAgICAgOiBkZWZhdWx0T3B0aW9uSW1hZ2Uuc3JjXG4gICAgICAgICAgfVxuICAgICAgICAvPlxuICAgICAgICA8VmFyaWF0aW9uRmllbGRPcHRpb25EZWZhdWx0SW5wdXRzIG9wdGlvbk5hbWU9e25hbWV9IG9wdGlvbj17b3B0aW9ufSAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFZhcmlhdGlvbk9wdGlvbkltYWdlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaLE9BQU9BLGNBQWMsTUFBTSxrQkFBa0I7QUFDN0MsU0FBU0MsY0FBYyxFQUFFQyw4QkFBOEIsUUFBUSxTQUFTO0FBQ3hFLE9BQU9DLG9CQUFvQixNQUFNLDhCQUE4QjtBQUMvRCxTQUFTQyxvQkFBb0IsUUFBUSw2QkFBNkI7QUFDbEUsT0FBT0MsaUJBQWlCLE1BQU0scUJBQXFCO0FBQ25ELE9BQU9DLGlDQUFpQyxNQUFNLHFDQUFxQztBQUFDLFNBQUFDLEdBQUEsSUFBQUMsSUFBQTtBQUFBLFNBQUFDLElBQUEsSUFBQUMsS0FBQTtBQUVwRixJQUFNQyxrQkFBa0IsR0FBR0MsT0FBTyxDQUFDLGlDQUFpQyxDQUFDLFdBQVE7QUFXN0UsU0FBU0Msb0JBQW9CQSxDQUFBQyxJQUFBLEVBT25CO0VBQUEsSUFOUkMsT0FBTyxHQUFBRCxJQUFBLENBQVBDLE9BQU87SUFBQUMsZ0JBQUEsR0FBQUYsSUFBQSxDQUNQRyxXQUFXO0lBQVhBLFdBQVcsR0FBQUQsZ0JBQUEsY0FBRyxJQUFJLEdBQUFBLGdCQUFBO0lBQ2xCRSxTQUFTLEdBQUFKLElBQUEsQ0FBVEksU0FBUztJQUNUQyxJQUFJLEdBQUFMLElBQUEsQ0FBSkssSUFBSTtJQUNKQyxNQUFNLEdBQUFOLElBQUEsQ0FBTk0sTUFBTTtJQUNOQyxxQkFBcUIsR0FBQVAsSUFBQSxDQUFyQk8scUJBQXFCO0VBRXJCLElBQUFDLHFCQUFBLEdBR0lsQixvQkFBb0IsQ0FBQyxDQUFDO0lBRnhCbUIsb0JBQW9CLEdBQUFELHFCQUFBLENBQXBCQyxvQkFBb0I7SUFDcEJDLDZCQUE2QixHQUFBRixxQkFBQSxDQUE3QkUsNkJBQTZCO0VBRS9CLElBQU1DLGNBQWMsaURBQUFDLE1BQUEsQ0FDbEJSLFNBQVMsR0FBRyxlQUFlLEdBQUcsRUFBRSxPQUFBUSxNQUFBLENBQzlCVCxXQUFXLEdBQUcsZ0JBQWdCLEdBQUcscUJBQXFCLENBQUU7RUFDNUQsSUFBTVUsVUFBVSxHQUFHekIsOEJBQThCLENBQUNrQixNQUFNLENBQUM7RUFDekQsSUFBTVEsT0FBTyxHQUNYQyxNQUFNLENBQUNULE1BQU0sQ0FBQ1UsS0FBSyxDQUFDLE1BQUFKLE1BQUEsQ0FBTSxDQUFDVCxXQUFXLEdBQUcsdUJBQXVCLEdBQUcsRUFBRSxDQUFFO0VBQ3pFLG9CQUNFVCxJQUFBO0lBQ0V1QixTQUFTLEVBQUVQLDZCQUE4QjtJQUN6Q1EsT0FBTyxFQUFFZixXQUFXLEdBQUdGLE9BQU8sR0FBR2tCLFNBQVU7SUFBQUMsUUFBQSxlQUUzQ3hCLEtBQUE7TUFBS3FCLFNBQVMsRUFBRU4sY0FBZTtNQUFBUyxRQUFBLGdCQUM3QjFCLElBQUEsQ0FBQ0wsb0JBQW9CO1FBQUNlLFNBQVMsRUFBRUEsU0FBVTtRQUFDaUIsT0FBTyxFQUFFLENBQUNsQjtNQUFZLENBQUUsQ0FBQyxlQUNyRVQsSUFBQTtRQUNFdUIsU0FBUyxFQUFFUixvQkFBcUI7UUFDaENhLEtBQUssRUFBRTtVQUNMQyxlQUFlLFNBQUFYLE1BQUEsQ0FBU3pCLGNBQWMsQ0FBQ21CLE1BQU0sQ0FBQztRQUNoRDtNQUFFLENBQ0gsQ0FBQyxlQUNGWixJQUFBLENBQUNSLGNBQWM7UUFBQzRCLE9BQU8sRUFBRUEsT0FBUTtRQUFBTSxRQUFBLGVBQy9CMUIsSUFBQTtVQUFLdUIsU0FBUyxFQUFDLG9CQUFvQjtVQUFBRyxRQUFBLEVBQUVkLE1BQU0sQ0FBQ1U7UUFBSyxDQUFNO01BQUMsQ0FDMUMsQ0FBQyxFQUNoQlQscUJBQXFCLGlCQUNwQmIsSUFBQTtRQUFPdUIsU0FBUyxFQUFDLFNBQVM7UUFBQUcsUUFBQSxFQUFFUDtNQUFVLENBQVEsQ0FDL0MsZUFDRG5CLElBQUEsQ0FBQ0gsaUJBQWlCO1FBQ2hCYyxJQUFJLEtBQUFPLE1BQUEsQ0FBS1AsSUFBSSx3QkFBc0I7UUFDbkNXLEtBQUssRUFDSFYsTUFBTSxDQUFDa0IsVUFBVSxJQUFJbEIsTUFBTSxDQUFDa0IsVUFBVSxDQUFDQyxPQUFPLEdBQzFDbkIsTUFBTSxDQUFDa0IsVUFBVSxDQUFDQyxPQUFPLEdBQ3pCNUIsa0JBQWtCLENBQUM2QjtNQUN4QixDQUNGLENBQUMsZUFDRmhDLElBQUEsQ0FBQ0YsaUNBQWlDO1FBQUNtQyxVQUFVLEVBQUV0QixJQUFLO1FBQUNDLE1BQU0sRUFBRUE7TUFBTyxDQUFFLENBQUM7SUFBQSxDQUNwRTtFQUFDLENBQ0gsQ0FBQztBQUVWO0FBRUEsZUFBZVAsb0JBQW9CIn0=