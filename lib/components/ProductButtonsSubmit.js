'use client';

import { useMerchiFormContext } from './MerchiProductFormProvider';
import { ButtonProductSubmit } from './buttons';
import { isProductSupplierMOD } from './utils';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
function ProductButtonsSubmit() {
  var _useMerchiFormContext = useMerchiFormContext(),
    allowAddToCart = _useMerchiFormContext.allowAddToCart,
    classNameButtonSubmit = _useMerchiFormContext.classNameButtonSubmit,
    classNameButtonsSubmitContainer = _useMerchiFormContext.classNameButtonsSubmitContainer,
    _useMerchiFormContext2 = _useMerchiFormContext.btnNameAddToCart,
    btnNameAddToCart = _useMerchiFormContext2 === void 0 ? 'Add To Card' : _useMerchiFormContext2,
    loading = _useMerchiFormContext.loading,
    onAddToCart = _useMerchiFormContext.onAddToCart,
    onBuyNow = _useMerchiFormContext.onBuyNow,
    onGetQuote = _useMerchiFormContext.onGetQuote,
    product = _useMerchiFormContext.product,
    productFormId = _useMerchiFormContext.productFormId,
    hidePaymentUpfrontButton = _useMerchiFormContext.hidePaymentUpfrontButton,
    hideRequestQuotationButton = _useMerchiFormContext.hideRequestQuotationButton;
  var isSupplierMOD = isProductSupplierMOD(product);
  var allowPaymentUpfront = product.allowPaymentUpfront,
    allowQuotation = product.allowQuotation;
  return /*#__PURE__*/_jsx(_Fragment, {
    children: !productFormId && /*#__PURE__*/_jsx("div", {
      className: classNameButtonsSubmitContainer,
      children: isSupplierMOD ? /*#__PURE__*/_jsx("button", {
        className: classNameButtonSubmit,
        onClick: onGetQuote,
        children: "Request Customisation"
      }) : /*#__PURE__*/_jsxs(_Fragment, {
        children: [!!(allowAddToCart && onAddToCart) && /*#__PURE__*/_jsx(ButtonProductSubmit, {
          onClick: onAddToCart,
          text: btnNameAddToCart
        }), !!(allowPaymentUpfront && !hidePaymentUpfrontButton && onBuyNow) && /*#__PURE__*/_jsx(ButtonProductSubmit, {
          onClick: onBuyNow,
          text: "Buy Now"
        }), !!(allowQuotation && !hideRequestQuotationButton && onGetQuote) && /*#__PURE__*/_jsx("button", {
          disabled: loading,
          className: classNameButtonSubmit,
          onClick: onGetQuote,
          children: loading ? 'Loading...' : 'Get Quote'
        })]
      })
    })
  });
}
export default ProductButtonsSubmit;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VNZXJjaGlGb3JtQ29udGV4dCIsIkJ1dHRvblByb2R1Y3RTdWJtaXQiLCJpc1Byb2R1Y3RTdXBwbGllck1PRCIsImpzeCIsIl9qc3giLCJGcmFnbWVudCIsIl9GcmFnbWVudCIsImpzeHMiLCJfanN4cyIsIlByb2R1Y3RCdXR0b25zU3VibWl0IiwiX3VzZU1lcmNoaUZvcm1Db250ZXh0IiwiYWxsb3dBZGRUb0NhcnQiLCJjbGFzc05hbWVCdXR0b25TdWJtaXQiLCJjbGFzc05hbWVCdXR0b25zU3VibWl0Q29udGFpbmVyIiwiX3VzZU1lcmNoaUZvcm1Db250ZXh0MiIsImJ0bk5hbWVBZGRUb0NhcnQiLCJsb2FkaW5nIiwib25BZGRUb0NhcnQiLCJvbkJ1eU5vdyIsIm9uR2V0UXVvdGUiLCJwcm9kdWN0IiwicHJvZHVjdEZvcm1JZCIsImhpZGVQYXltZW50VXBmcm9udEJ1dHRvbiIsImhpZGVSZXF1ZXN0UXVvdGF0aW9uQnV0dG9uIiwiaXNTdXBwbGllck1PRCIsImFsbG93UGF5bWVudFVwZnJvbnQiLCJhbGxvd1F1b3RhdGlvbiIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwib25DbGljayIsInRleHQiLCJkaXNhYmxlZCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL1Byb2R1Y3RCdXR0b25zU3VibWl0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5pbXBvcnQgeyB1c2VNZXJjaGlGb3JtQ29udGV4dCB9IGZyb20gJy4vTWVyY2hpUHJvZHVjdEZvcm1Qcm92aWRlcic7XG5pbXBvcnQgeyBCdXR0b25Qcm9kdWN0U3VibWl0IH0gZnJvbSAnLi9idXR0b25zJztcbmltcG9ydCB7IGlzUHJvZHVjdFN1cHBsaWVyTU9EIH0gZnJvbSAnLi91dGlscyc7XG5cbmZ1bmN0aW9uIFByb2R1Y3RCdXR0b25zU3VibWl0KCkge1xuICBjb25zdCB7XG4gICAgYWxsb3dBZGRUb0NhcnQsXG4gICAgY2xhc3NOYW1lQnV0dG9uU3VibWl0LFxuICAgIGNsYXNzTmFtZUJ1dHRvbnNTdWJtaXRDb250YWluZXIsXG4gICAgYnRuTmFtZUFkZFRvQ2FydCA9ICdBZGQgVG8gQ2FyZCcsXG4gICAgbG9hZGluZyxcbiAgICBvbkFkZFRvQ2FydCxcbiAgICBvbkJ1eU5vdyxcbiAgICBvbkdldFF1b3RlLFxuICAgIHByb2R1Y3QsXG4gICAgcHJvZHVjdEZvcm1JZCxcbiAgICBoaWRlUGF5bWVudFVwZnJvbnRCdXR0b24sXG4gICAgaGlkZVJlcXVlc3RRdW90YXRpb25CdXR0b24sXG4gIH0gPSB1c2VNZXJjaGlGb3JtQ29udGV4dCgpO1xuICBjb25zdCBpc1N1cHBsaWVyTU9EID0gaXNQcm9kdWN0U3VwcGxpZXJNT0QocHJvZHVjdCk7XG4gIGNvbnN0IHsgYWxsb3dQYXltZW50VXBmcm9udCwgYWxsb3dRdW90YXRpb24gfSA9IHByb2R1Y3Q7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHshcHJvZHVjdEZvcm1JZCAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVCdXR0b25zU3VibWl0Q29udGFpbmVyfT5cbiAgICAgICAgICB7aXNTdXBwbGllck1PRCA/IChcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtjbGFzc05hbWVCdXR0b25TdWJtaXR9IG9uQ2xpY2s9e29uR2V0UXVvdGV9PlxuICAgICAgICAgICAgICBSZXF1ZXN0IEN1c3RvbWlzYXRpb25cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICB7ISEoYWxsb3dBZGRUb0NhcnQgJiYgb25BZGRUb0NhcnQpICYmIChcbiAgICAgICAgICAgICAgICA8QnV0dG9uUHJvZHVjdFN1Ym1pdFxuICAgICAgICAgICAgICAgICAgb25DbGljaz17b25BZGRUb0NhcnR9XG4gICAgICAgICAgICAgICAgICB0ZXh0PXtidG5OYW1lQWRkVG9DYXJ0fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIHshIShcbiAgICAgICAgICAgICAgICBhbGxvd1BheW1lbnRVcGZyb250ICYmXG4gICAgICAgICAgICAgICAgIWhpZGVQYXltZW50VXBmcm9udEJ1dHRvbiAmJlxuICAgICAgICAgICAgICAgIG9uQnV5Tm93XG4gICAgICAgICAgICAgICkgJiYgPEJ1dHRvblByb2R1Y3RTdWJtaXQgb25DbGljaz17b25CdXlOb3d9IHRleHQ9J0J1eSBOb3cnIC8+fVxuICAgICAgICAgICAgICB7ISEoXG4gICAgICAgICAgICAgICAgYWxsb3dRdW90YXRpb24gJiZcbiAgICAgICAgICAgICAgICAhaGlkZVJlcXVlc3RRdW90YXRpb25CdXR0b24gJiZcbiAgICAgICAgICAgICAgICBvbkdldFF1b3RlXG4gICAgICAgICAgICAgICkgJiYgKFxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtsb2FkaW5nfVxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVCdXR0b25TdWJtaXR9XG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkdldFF1b3RlfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHtsb2FkaW5nID8gJ0xvYWRpbmcuLi4nIDogJ0dldCBRdW90ZSd9XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb2R1Y3RCdXR0b25zU3VibWl0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaLFNBQVNBLG9CQUFvQixRQUFRLDZCQUE2QjtBQUNsRSxTQUFTQyxtQkFBbUIsUUFBUSxXQUFXO0FBQy9DLFNBQVNDLG9CQUFvQixRQUFRLFNBQVM7QUFBQyxTQUFBQyxHQUFBLElB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