'use client';

import InputHiddenStatic from './InputHiddenStatic';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var VariationFieldOptionDefaultInputs = function VariationFieldOptionDefaultInputs(_ref) {
  var option = _ref.option,
    optionName = _ref.optionName;
  var colour = option.colour,
    currency = option.currency,
    id = option.id,
    optionId = option.optionId,
    position = option.position,
    value = option.value,
    _option$variationCost = option.variationCost,
    variationCost = _option$variationCost === void 0 ? 0 : _option$variationCost,
    _option$variationUnit = option.variationUnitCost,
    variationUnitCost = _option$variationUnit === void 0 ? 0 : _option$variationUnit;
  function floatValue(v) {
    return parseFloat(v);
  }
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [colour && /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: "".concat(optionName, ".colour"),
      value: colour
    }), currency && /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: "".concat(optionName, ".currency"),
      value: currency
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: "".concat(optionName, ".id"),
      value: id ? id : optionId
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: "".concat(optionName, ".position"),
      value: position
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: "".concat(optionName, ".variationCost"),
      value: floatValue(variationCost)
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: "".concat(optionName, ".variationUnitCost"),
      value: floatValue(variationUnitCost)
    }), /*#__PURE__*/_jsx(InputHiddenStatic, {
      name: "".concat(optionName, ".value"),
      value: value
    })]
  });
};
export default VariationFieldOptionDefaultInputs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbnB1dEhpZGRlblN0YXRpYyIsImpzeCIsIl9qc3giLCJGcmFnbWVudCIsIl9GcmFnbWVudCIsImpzeHMiLCJfanN4cyIsIlZhcmlhdGlvbkZpZWxkT3B0aW9uRGVmYXVsdElucHV0cyIsIl9yZWYiLCJvcHRpb24iLCJvcHRpb25OYW1lIiwiY29sb3VyIiwiY3VycmVuY3kiLCJpZCIsIm9wdGlvbklkIiwicG9zaXRpb24iLCJ2YWx1ZSIsIl9vcHRpb24kdmFyaWF0aW9uQ29zdCIsInZhcmlhdGlvbkNvc3QiLCJfb3B0aW9uJHZhcmlhdGlvblVuaXQiLCJ2YXJpYXRpb25Vbml0Q29zdCIsImZsb2F0VmFsdWUiLCJ2IiwicGFyc2VGbG9hdCIsImNoaWxkcmVuIiwibmFtZSIsImNvbmNhdCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL1ZhcmlhdGlvbkZpZWxkT3B0aW9uRGVmYXVsdElucHV0cy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0IElucHV0SGlkZGVuU3RhdGljIGZyb20gJy4vSW5wdXRIaWRkZW5TdGF0aWMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBvcHRpb246IGFueTtcbiAgb3B0aW9uTmFtZTogc3RyaW5nO1xufVxuXG5jb25zdCBWYXJpYXRpb25GaWVsZE9wdGlvbkRlZmF1bHRJbnB1dHM6IFJlYWN0LkZDPFByb3BzPiA9ICh7IG9wdGlvbiwgb3B0aW9uTmFtZSB9KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjb2xvdXIsXG4gICAgY3VycmVuY3ksXG4gICAgaWQsXG4gICAgb3B0aW9uSWQsXG4gICAgcG9zaXRpb24sXG4gICAgdmFsdWUsXG4gICAgdmFyaWF0aW9uQ29zdCA9IDAsXG4gICAgdmFyaWF0aW9uVW5pdENvc3QgPSAwLFxuICB9ID0gb3B0aW9uO1xuXG4gIGZ1bmN0aW9uIGZsb2F0VmFsdWUodjogYW55KSB7XG4gICAgcmV0dXJuIHBhcnNlRmxvYXQodik7XG4gIH1cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge2NvbG91ciAmJiBcbiAgICAgICAgPElucHV0SGlkZGVuU3RhdGljXG4gICAgICAgICAgbmFtZT17YCR7b3B0aW9uTmFtZX0uY29sb3VyYH1cbiAgICAgICAgICB2YWx1ZT17Y29sb3VyfVxuICAgICAgICAvPlxuICAgICAgfVxuICAgICAge2N1cnJlbmN5ICYmIFxuICAgICAgICA8SW5wdXRIaWRkZW5TdGF0aWNcbiAgICAgICAgICBuYW1lPXtgJHtvcHRpb25OYW1lfS5jdXJyZW5jeWB9XG4gICAgICAgICAgdmFsdWU9e2N1cnJlbmN5fVxuICAgICAgICAvPlxuICAgICAgfVxuICAgICAgPElucHV0SGlkZGVuU3RhdGljXG4gICAgICAgIG5hbWU9e2Ake29wdGlvbk5hbWV9LmlkYH1cbiAgICAgICAgdmFsdWU9e2lkID8gaWQgOiBvcHRpb25JZH1cbiAgICAgIC8+XG4gICAgICA8SW5wdXRIaWRkZW5TdGF0aWNcbiAgICAgICAgbmFtZT17YCR7b3B0aW9uTmFtZX0ucG9zaXRpb25gfVxuICAgICAgICB2YWx1ZT17cG9zaXRpb259XG4gICAgICAvPlxuICAgICAgPElucHV0SGlkZGVuU3RhdGljXG4gICAgICAgIG5hbWU9e2Ake29wdGlvbk5hbWV9LnZhcmlhdGlvbkNvc3RgfVxuICAgICAgICB2YWx1ZT17ZmxvYXRWYWx1ZSh2YXJpYXRpb25Db3N0KX1cbiAgICAgIC8+XG4gICAgICA8SW5wdXRIaWRkZW5TdGF0aWNcbiAgICAgICAgbmFtZT17YCR7b3B0aW9uTmFtZX0udmFyaWF0aW9uVW5pdENvc3RgfVxuICAgICAgICB2YWx1ZT17ZmxvYXRWYWx1ZSh2YXJpYXRpb25Vbml0Q29zdCl9XG4gICAgICAvPlxuICAgICAgPElucHV0SGlkZGVuU3RhdGljXG4gICAgICAgIG5hbWU9e2Ake29wdGlvbk5hbWV9LnZhbHVlYH1cbiAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgLz5cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgVmFyaWF0aW9u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